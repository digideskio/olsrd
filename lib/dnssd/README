= OLSR DNSSD plugin =

This README file is the main documentation source for the OLSR DNSSD plugin

Last update November 17, 2014

== Description ==

This plugin propagates and distance-limits multicast DNS (mDNS) service discovery
advertisements (DNSSD) over an OLSR mesh network. It is built on top of the P2PD
OLSR plugin. A description of the P2PD plugin is included below.

Local services are advertised over the mesh according to custom TTL values. For
example, a service that has a TTL value of 3 will be advertised a maximum of 3
hops away. TTL values are specified as a txt-record. Here is an example mDNS
service advertisement with a TTL value:

<?xml version="1.0" standalone='no'?><!--*-nxml-*-->
<!DOCTYPE service-group SYSTEM "avahi-service.dtd">
<service-group>
<name replace-wildcards="yes">Example service on %h</name>
<service>
<type>_http._tcp</type>
<domain-name>mesh.local</domain-name>
<port>80</port>
<txt-record>application=Example service</txt-record>
<txt-record>ttl=3</txt-record>
<txt-record>ipaddr=10.1.1.1</txt-record>
</service>
</service-group>

== Configuration ==

To enable the Plugin use the following syntax:

LoadPlugin "olsrd_dnssd.so.0.1.3
{
# Specify interfaces where the hosts running Peer to Peer applications are
# attached
PlParam     "NonOlsrIf"   "eth0"
PlParam     "NonOlsrIf"   "eth1"
# P2pdTtl is the time to live given to the P2PD OLSR messages
PlParam     "P2pdTtl"     "5"
# Specify the UDP destination address/port for P2P node discovery
# Allowed: IPv4 broadcast and multicast, IPv6 multicast only
#   MS Groove
PlParam     "UdpDestPort" "255.255.255.255 1211"
#   MDNS multicast (draft-cheshire-dnsext-multicastdns)
PlParam     "UdpDestPort" "224.0.0.251 5353"
#   Management Socket to talk to Commotion Service Manager
PlParam     "CSMSocket" "/var/run/commotion-service-manager.sock"
#   Domain used for advertising services
PlParam     "Domain"      "mesh.local"
#   Interval in seconds for updating local service list
PlParam     "ServiceUpdateInterval" "300"
}

Where eth0 and eth1 are the names of the interfaces where you want to capture
traffic (and decapsulate incoming traffic).

Note that this interfaces must not talk OLSR and also the subnets on this
interfaces must be announced with an appropriate HNA entry.
This version of the plugin will not chech this stuff to be properly configured!

P2pdTtl is the *default* time to live given to the P2PD OLSR messages. This
value is not applied to local service advertisements that specify their own 
TTL value in their Avahi service file.

CSMSocket is the UNIX domain socket used to talk to the Commotion Service Manger
(CSM) in order to get a list of local services. CSM is in charge of publishing
mDNS announcements of local services on the network.

== P2PD Description ==

This plugin goal is the distribution of Peer to Peer Discovery messages over an
OLSR Wireless Mesh Network.

In a wireless mesh network, the usage of wireless interfaces in ad-hoc mode and
the OLSR routing protocol prevent UDP messages to be distributed all over the
network.

We are especially interested in the distribution of UDP messages, used for host-
based service discovery, over the networks that do not directly participate in
the OLSR mesh cloud.

This task is achieved in the following way: 
 1. the local router picks up from the local non-OLSR (HNA) network UDP messages
    and encapsulates them in a new type of OLSR messages,
 2. the OLSR infrastructure is exploited for the transport of these messages,
 3. remote routers decapsulate UDP messages from received OLSR messages and send
    them over their attached non-OLSR networks.

The work could have its practical and immediate application in wireless network
communities that employ the OLSR protocol.

The plugin captures the traffic (only IPv4 if OLSR is running IPv4 and only IPv6
if OLSR is running IPv6) and encapsulates this traffic in OLSR messages that are
forwarded to all the other nodes in the mesh.

Other nodes running the plugin will decapsulate the packets and will send them
to the interfaces specified in the configuration file

Let's get this example topology

pc1->eth0 ----- eth0<-r1->ath0 -------ath0<-r2->eth0 ---------eth0<-pc2

r1 and r2 are OLSR routers with p2pd plugin enabled. pc1 will be able to receive
UDP traffic generated at pc2 and vice versa

The most interesting feature is that messages are forwarded also by OLSR routers
without the plugin. For example:

pc1->eth0 ----- eth0<-r1->ath0 ---r3----ath0<-r2->eth0 ---------eth0<-pc2

also in this topology UDP traffic between pc1 and pc2 is possible because r3
forwards UDP plugin OLSR packets even if it is not aware of the new application.

=== References ===

 * OLSR Optimized Link State Routing:
     [http://tools.ietf.org/html/rfc3626 IETF RFC 3626]

=== Contact ===

 * Dan Staples <danstaples AT opentechinstitute DOT org>

Revision history
================

11/17/2014 - Updated plugin to use latest version of Commotion Service Manager
	     * Version 0.1.3
02/14/2013 - Fixed bugs relating to capturing outgoing packets, and hostname
             replacement in service names. 
             * Plugin has been tested and verified to be working. 
             * Version 0.1.2
02/11/2013 - Fixed packet checksum calculations
02/11/2013 - Added ServiceUpdateInterval configuration parameter for periodically
             refreshing list of local services
             * Declaring this version 0.1.0
02/09/2013 - Initial version released for feedback and testing